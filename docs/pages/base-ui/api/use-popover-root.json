{
  "parameters": {
    "animated": { "type": { "name": "boolean", "description": "boolean" }, "default": "true" },
    "closeDelay": { "type": { "name": "number", "description": "number" }, "default": "0" },
    "defaultOpen": { "type": { "name": "boolean", "description": "boolean" }, "default": "false" },
    "delay": { "type": { "name": "number", "description": "number" }, "default": "500" },
    "delayType": {
      "type": {
        "name": "&#39;rest&#39; | &#39;hover&#39;",
        "description": "&#39;rest&#39; | &#39;hover&#39;"
      },
      "default": "'rest'"
    },
    "followCursorAxis": {
      "type": {
        "name": "&#39;none&#39; | &#39;x&#39; | &#39;y&#39;",
        "description": "&#39;none&#39; | &#39;x&#39; | &#39;y&#39;"
      },
      "default": "'none'"
    },
    "keepMounted": { "type": { "name": "boolean", "description": "boolean" }, "default": "false" },
    "onOpenChange": {
      "type": {
        "name": "(isOpen: boolean, event?: Event, reason?: OpenChangeReason) =&gt; void",
        "description": "(isOpen: boolean, event?: Event, reason?: OpenChangeReason) =&gt; void"
      }
    },
    "open": { "type": { "name": "boolean", "description": "boolean" } },
    "openOnHover": { "type": { "name": "boolean", "description": "boolean" }, "default": "false" },
    "positionerElement": {
      "type": { "name": "HTMLElement | null", "description": "HTMLElement | null" }
    },
    "triggerElement": { "type": { "name": "Element | null", "description": "Element | null" } }
  },
  "returnValue": {
    "descriptionId": {
      "type": { "name": "string | undefined", "description": "string | undefined" },
      "required": true
    },
    "getRootPopupProps": {
      "type": {
        "name": "(externalProps?: GenericHTMLProps) =&gt; GenericHTMLProps",
        "description": "(externalProps?: GenericHTMLProps) =&gt; GenericHTMLProps"
      },
      "required": true
    },
    "getRootTriggerProps": {
      "type": {
        "name": "(externalProps?: GenericHTMLProps) =&gt; GenericHTMLProps",
        "description": "(externalProps?: GenericHTMLProps) =&gt; GenericHTMLProps"
      },
      "required": true
    },
    "instantType": {
      "type": {
        "name": "&#39;delay&#39; | &#39;dismiss&#39; | &#39;focus&#39; | undefined",
        "description": "&#39;delay&#39; | &#39;dismiss&#39; | &#39;focus&#39; | undefined"
      },
      "required": true
    },
    "mounted": { "type": { "name": "boolean", "description": "boolean" }, "required": true },
    "open": { "type": { "name": "boolean", "description": "boolean" }, "required": true },
    "rootContext": {
      "type": { "name": "FloatingRootContext", "description": "FloatingRootContext" },
      "required": true
    },
    "setDescriptionId": {
      "type": {
        "name": "React.Dispatch&lt;React.SetStateAction&lt;string | undefined&gt;&gt;",
        "description": "React.Dispatch&lt;React.SetStateAction&lt;string | undefined&gt;&gt;"
      },
      "required": true
    },
    "setMounted": {
      "type": {
        "name": "React.Dispatch&lt;React.SetStateAction&lt;boolean&gt;&gt;",
        "description": "React.Dispatch&lt;React.SetStateAction&lt;boolean&gt;&gt;"
      },
      "required": true
    },
    "setOpen": {
      "type": {
        "name": "(open: boolean, event?: Event, reason?: OpenChangeReason) =&gt; void",
        "description": "(open: boolean, event?: Event, reason?: OpenChangeReason) =&gt; void"
      },
      "required": true
    },
    "setTitleId": {
      "type": {
        "name": "React.Dispatch&lt;React.SetStateAction&lt;string | undefined&gt;&gt;",
        "description": "React.Dispatch&lt;React.SetStateAction&lt;string | undefined&gt;&gt;"
      },
      "required": true
    },
    "titleId": {
      "type": { "name": "string | undefined", "description": "string | undefined" },
      "required": true
    },
    "transitionStatus": {
      "type": { "name": "TransitionStatus", "description": "TransitionStatus" },
      "required": true
    }
  },
  "name": "usePopoverRoot",
  "filename": "/packages/mui-base/src/Popover/Root/usePopoverRoot.ts",
  "imports": ["import { usePopoverRoot } from '@base_ui/react/Popover';"],
  "demos": "<ul></ul>"
}
